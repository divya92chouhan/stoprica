%h1
  = @race.name

%h4
  Vrijeme utrke:
  %b
    = l @race.date, format: :short

%h4
  Prijave otvorene do:
  %b#raceResultLocked{ class: @race.lock_race_results ? 'shame' : '' }
    = l @race.registration_threshold, format: :short
  - if @race.lock_race_results
    .mdl-tooltip.mdl-tooltip--large{for: "raceResultLocked"}
      %b Napomena:
      Odjave su onemogućene za ovu utrku.

- if @is_admin && @race.pool
  %h4
    Baza brojeva:
    = link_to @race.pool&.name, pool_path(@race.pool)

.race-actions
  = link_to races_path do
    .mdl-button.mdl-button--raised.mdl-button--accent.mdl-js-button.mdl-js-ripple-effect
      Natrag

  - if @is_admin || @is_race_admin
    = link_to race_path(@race, format: "csv") do
      .mdl-button.mdl-js-button.mdl-button--raised.mdl-button--colored.mdl-js-ripple-effect
        Export CSV

  - if @is_admin
    = link_to assign_positions_race_path(@race) do
      .mdl-button.mdl-js-button.mdl-button--raised.mdl-button--colored.mdl-js-ripple-effect
        Azuriraj

    = link_to edit_race_path(@race) do
      .mdl-button.mdl-js-button.mdl-button--raised.mdl-button--colored.mdl-js-ripple-effect
        Izmijeni

  - if DateTime.now < @race.registration_threshold
    - if user_signed_in? && !@racer_has_race_result
      = form_for RaceResult.new do |f|
        = f.hidden_field :racer_id, value: current_user.racer.try(:id)
        = f.hidden_field :race_id, value: @race.id
        = f.hidden_field :status, value: 1
        = f.select :category_id, @race.categories.collect{|c| [c.name, c.id]}, { prompt: 'Odaberi kategoriju' }, required: true
        - if @race.league&.xczld?
          .waiver
            %input{ type: 'checkbox', required: true }
            Ovim potvrđujem da sam pročitao i da se slažem s
            = link_to 'Izjavom o oslobađanju organizatora od odgovornosti', izjava_path, target: '_blank'
        .actions
          = f.submit 'Prijavi se', class: 'mdl-button mdl-js-button mdl-button--raised mdl-button--accent mdl-js-ripple-effect'
    - elsif user_signed_in? && @racer_has_race_result
      - unless @race.lock_race_results
        = form_for @race_result, method: 'DELETE' do |f|
          .actions
            = f.submit 'Odjavi se', class: 'mdl-button mdl-js-button mdl-button--raised mdl-button--colored mdl-js-ripple-effect'
    - else
      = link_to 'Login za prijavu', login_racers_path(redirect: "/races/#{@race.id}"), class: 'mdl-button mdl-js-button mdl-button--raised mdl-button--colored mdl-js-ripple-effect'

%a{ href: @race.description_url, target: '_blank' }
  %h4
    Dodatne informacije

- if @is_admin || @is_race_admin
  = form_for RaceResult.new do |f|
    %input#racer_search{ type: 'text', placeholder: 'Natjecatelji...' }
    = f.hidden_field :racer_id, class: 'admin_racer_id'
    = f.hidden_field :race_id, value: @race.id
    = f.hidden_field :status, value: 1
    = f.select :category_id, @race.categories.collect{|c| [c.name, c.id]}
    = f.submit 'Prijavi', class: 'mdl-button mdl-js-button mdl-button--raised mdl-button--colored mdl-js-ripple-effect'
  :javascript
    var choices = #{Racer.where.not(id: @race.race_results.pluck(:racer_id)).collect{|r| [r.full_name, r.id, r.email]}.sort{|a, b| a[0] <=> b[0]}.inspect.html_safe};

    new autoComplete({
      selector: '#racer_search',
      minChars: 2,
      source: function(term, suggest){
        term = term.toLowerCase();
        var matches = [];
        for (i=0; i<choices.length; i++) {
          var matchesName = ~choices[i][0].toLowerCase().indexOf(term);
          var matchesEmail = ~choices[i][2].toLowerCase().indexOf(term);
          if (matchesName || matchesEmail) {
            matches.push(choices[i]);
          }
        }
        suggest(matches);
      },
      renderItem: function (item, search){
        search = search.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
        var re = new RegExp("(" + search.split(' ').join('|') + ")", "gi");
        return '<div class="autocomplete-suggestion" data-val="' + item[0] + '" data-id="' + item[1] + '">' + item[0].replace(re, "<b>$1</b>") + '</div>';
      },
      onSelect: function (event, term, item) {
        document.querySelector('.admin_racer_id').value = item.dataset.id;
      }
    });
  %br
  %br

- if @race.league.xczld? && !@race.started_at
  %h4 Start Box

  %table.wide_table.mdl-data-table.mdl-js-data-table.mdl-shadow--2dp{ style: 'background: #ffe082' }
    %thead
      %tr
        %th Ime i Prezime
        %th Klub
    %tbody
      - @race.start_box_racers.each do |racer|
        %tr
          %td= racer.full_name
          %td= racer.club.try(:name)

%h4
  Prijavljeni natjecatelji
  = "(#{@race.race_results.count})"

- if @race.penjanje?
  = render 'climbing_results'
- else
  = render 'results'

:javascript
  var forms = document.querySelectorAll('#adminFormContainer form.edit_race_result');

  for(var i = forms.length - 1; i >= 0; i--) {
    forms[i].addEventListener('submit', submitAsync);
  }

  function submitAsync(e) {
    e.preventDefault();

    var xhr = new XMLHttpRequest();

    xhr.onreadystatechange = function() {
      if (this.readyState === 4) {
        if (this.status === 200) {
          var res = JSON.parse(xhr.responseText);
          var startNumber = res.start_number ? res.start_number.value : '';
          var raceId = res.start_number ? res.start_number.race_id : '';
          alert('Spremljen broj: ' + startNumber + ' race_id: ' + raceId);
        }
        else {
          alert('GRESKA. Nije spremljeno.');
        }
      }
    };

    xhr.open('POST', this.action, true);
    xhr.setRequestHeader('Accept', 'application/json');
    xhr.send(new FormData(this));

    return false;
  }
